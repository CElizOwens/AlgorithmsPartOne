import edu.princeton.cs.algs4.WeightedQuickUnionUF;

public class GridCreation {
  
  private WeightedQuickUnionUF initialarray;
  private int[][] sitesarray;
  
  // Constructor
  public GridCreation(int n)
  // create n-by-n grid, with all sites blocked
  {
    sitesarray = new int[n*n][2];
    //initialarray = new int[n*n];
    initialarray = new WeightedQuickUnionUF(n*n);
    int[] xyarray = new int[2];
    int a, x, y;  //a is a given site's cardinal number
    
    for (int i = 0; i < (n*n); i++)
    {
      a = initialarray.find(i) + 1;
      y = a % n;
      if (a <= n) x = 1;
      else if (a/(double) n > a/n) x = a/n + 1;
      else x = a/n;
      xyarray[0] = x;
      xyarray[1] = y;
      sitesarray[i] = xyarray;
    }
  }
  
  public static void main(String[] args)
  {
    GridCreation mygrid = new GridCreation(5);
    System.out.print(mygrid.sitesarray);
  } //No output at this point, but compilable...
}